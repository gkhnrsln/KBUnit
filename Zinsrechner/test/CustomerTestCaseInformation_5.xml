<?xml version="1.0" encoding="UTF-8"?>
<root>
    <date> 2011/01/27 17:41 </date>
    <testcases>
        <testcase>  
            <path> darlehen.TilgungsdarlehenTest.testBerechneAnnuitaetFuerPeriode </path>
            <desc> Dieser Test &#252;berpr&#252;ft die Annuit&#228;tsberechnung. </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testBerechneAnnuitaetFuerPeriode_Darlehen </name>
                    <desc> Darlehen, das zur&#252;ckgezahlt werden soll </desc>
                </parameter>
                <parameter>
                    <name> testBerechneAnnuitaetFuerPeriode_Laufzeit </name>
                    <desc> Laufzeit des Darlehens in Raten </desc>
                </parameter>
                <parameter>
                    <name> testBerechneAnnuitaetFuerPeriode_Zinssatz </name>
                    <desc> Zinssatz, der vor Zahlung jeder Rate auf die Restschuld 
                        berechnet wird (1% = 0,01)</desc>
                </parameter>
                <parameter>
                    <name> testBerechneAnnuitaetFuerPeriode_Periode </name>
                    <desc> Periode bzw. Rate, f√ºr die die Annuitaet ermittelt werden soll </desc>
                </parameter>
                <parameter>
                    <name> testBerechneAnnuitaetFuerPeriode_exp_ErwarteteAnnuitaet </name>
                    <desc> erwartete Annuitaet der angegebenen Periode bzw. Rate </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> darlehen.TilgungsdarlehenTest.testBerechneGesamtschuld </path>
            <desc> Dieser Test &#252;berpr&#252;ft die Berechnung der Gesamtschuld. </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testBerechneGesamtschuld_User </name>
                    <desc> Benutzer, welcher die Berechnung durchf&#252;hren darf. </desc>
                </parameter>
                <parameter>
                    <name> testBerechneGesamtschuld_Darlehen </name>
                    <desc> Darlehen, das zur&#252;ckgezahlt werden soll </desc>
                </parameter>
                <parameter>
                    <name> testBerechneGesamtschuld_Laufzeit </name>
                    <desc> Laufzeit des Darlehens in Raten </desc>
                </parameter>
                <parameter>
                    <name> testBerechneGesamtschuld_Zinssatz </name>
                    <desc> Zinssatz, der vor Zahlung jeder Rate auf die Restschuld 
                    berechnet wird (1% = 0,01) </desc>
                </parameter>
                <parameter>
                    <name> testBerechneGesamtschuld_exp_ErwarteteGesamtschuld </name>
                    <desc> erwartete Gesamtschuld (Summe aller Tilgungen und Zinsen), 
                        die an den Kreditgeber zur&#228;ckgezahlt werden muss </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> darlehen.TilgungsdarlehenTest.testBerechnungGesamtschuldMitInflation </path>
            <desc> Dieser Test &#252;berpr&#252;ft die Berechnung der Gesamtschuld
                mit einem randomisierten Inflationsfaktor. Der Test wird mehrfach ausgef&#252;hrt. </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testBerechnungGesamtschuldMitInflation_User </name>
                    <desc> Benutzer, welcher die Berechnung durchf&#252;hren darf. </desc>
                </parameter>
                <parameter>
                    <name> testBerechnungGesamtschuldMitInflation_Darlehen </name>
                    <desc> Darlehen, das zur&#252;ckgezahlt werden soll </desc>
                </parameter>
                <parameter>
                    <name> testBerechnungGesamtschuldMitInflation_Laufzeit </name>
                    <desc> Laufzeit des Darlehens in Raten </desc>
                </parameter>
                <parameter>
                    <name> testBerechnungGesamtschuldMitInflation_Zinssatz </name>
                    <desc> Zinssatz, der vor Zahlung jeder Rate auf die Restschuld
                        berechnet wird (1% = 0,01) </desc>
                </parameter>
                <parameter>
                    <name> testBerechnungGesamtschuldMitInflation_exp_ErwarteteGesamtschuld </name>
                    <desc> erwartete Gesamtschuld (Summe aller Tilgungen und Zinsen),
                        die an den Kreditgeber zur&#228;ckgezahlt werden muss </desc>
                </parameter>
                <parameter>
                    <name> testBerechnungGesamtschuldMitInflation_Bias </name>
                    <desc> Wert, den die berechnete Gesamtschuld von der erwarteten
                        Gesamtschuld wegen einer zuf&#228;lligen Inflationsrate, maximal 2%,
                        abweichen kann, so dass das Ergebnis immer noch akzeptiert wird.                        
                    </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>  
            <path> konten.KontoTest.setKundeZumKonto </path>
            <desc> Dieser Test &#252;berpr&#252;ft das Setzen eines Kunden zu einem Konto. </desc>
            <testtype> 4 </testtype>
            <parameters>
                <parameter>
                    <name> setKundeZumKonto_Nachname </name>
                    <desc> Nachname des Kunden, der dem Konto zugeordnet werden soll </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> konten.JUnit5KontoTest.testSetKundeZumKonto </path>
            <desc> Dieser Test &#252;berpr&#252;ft das Setzen eines Kunden zum Konto. (Jupiter-Testfall) </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testSetKundeZumKonto_Nachname </name>
                    <desc> Nachname des zu setzenden Kunden </desc>
                </parameter>
             </parameters>
        </testcase>
        <testcase>
            <path> konten.JUnit5KontoTest.testSetKontoZumKunden </path>
            <desc> Dieser Test &#252;berpr&#252;ft das Setzen eines Kontos zum Kunden. (Jupiter-Testfall) </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testSetKontoZumKunden_Nachname </name>
                    <desc> Nachname des zu setzenden Kunden </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> konten.JUnit5KontoTest.testRechneAlterMal2 </path>
            <desc> Dieser Test nimmt das Alter mal zwei. (Jupiter-Testfall) </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testRechneAlterMal2_Alter </name>
                    <desc> Alter, welches mal 2 genommen werden soll </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> konten.JUnit5KontoTest.testWithExternalMethodSource </path>
            <desc> Parameterized Test mittels MethodSource (Jupiter-Testfall) </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testWithExternalMethodSource_Musterstring </name>
                    <desc> Dummy String </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> konten.JUnit5KontoTest.testFuerDisabled </path>
            <desc> Test von disabled (Jupiter-Testfall) </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testFuerDisabled_Musterstring </name>
                    <desc> Dummy String </desc>
                </parameter>
            </parameters>
        </testcase>   
        <testcase>
            <path> math.MathDotPowTest.testRaiseToPowerStandard</path>
            <desc> Die Methode Math.pow wird mithilfe einer Testmethode getestet,
            	die mit der standard @Test-Annotation annotiert worden ist.</desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testRaiseToPowerStandard_Base </name>
                    <desc> Die Basis, die mit den Zahlen von 0 bis 10 potenziert werden
                    und jeweils mit dem Ergebnis von Math.pow verglichen werden soll </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> math.MathDotPowTest.testRaiseToPowerRepeated</path>
            <desc> Die Methode Math.pow wird mithilfe einer Testmethode getestet,
                die mit der @RepeatedTest-Annotation annotiert worden ist </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testRaiseToPowerRepeated_Base </name>
                    <desc> Die Basis, die mit den Zahlen von 0 bis 10 potenziert werden
                        und jeweils mit dem Ergebnis von Math.pow verglichen werden soll </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> math.MathDotPowTest.testRaiseToPowerParameterized</path>
            <desc> Die Methode Math.pow wird mithilfe einer Testmethode getestet,
                die mit der @ParameterizedTest-Annotation annotiert worden ist </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testRaiseToPowerParameterized_Base </name>
                    <desc> Die Basis, die mit den Zahlen von 0 bis 10 potenziert werden
                        und jeweils mit dem Ergebnis von Math.pow verglichen werden soll </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path>math.MathDotPowTest.testRaiseToPowerTemplate </path>
            <desc> Die Methode Math.pow wird mithilfe einer Testmethode getestet,
                die mit der @TestTemplate-Annotation annotiert worden ist.</desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testRaiseToPowerTemplate_Base </name>
                    <desc> Die Basis, die mit den Zahlen von 0 bis 10 potenziert werden
                        und jeweils mit dem Ergebnis von Math.pow verglichen werden soll </desc>
                </parameter>
            </parameters>
        </testcase>        
        <testcase>
            <path> math.MathDotPowTest.testRaiseToPowerPerformance </path>
            <desc> Es wird getestet, ob Math.pow() schnell genug ist </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testRaiseToPowerPerformance_TimeoutInNanos </name>
                    <desc> Zeit in Millisekunden, in der das Ergebnis berechnet werden soll </desc>
                </parameter>
                <parameter>
                    <name> testRaiseToPowerPerformance_Base </name>
                    <desc> Die Basis, die potenziert werden soll </desc>
                </parameter>
                <parameter>
                    <name> testRaiseToPowerPerformance_Exponent </name>
                    <desc> Der Exponent, mit der die Basis potenziert werden soll </desc>
                </parameter>
                <parameter>
                    <name> testRaiseToPowerPerformance_exp_Result </name>
                    <desc> Das erwartete Ergebnis des Potenzierens </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> math.TestFactoryTest.testDynamicTestFromIntStream </path>
            <desc> Es wird eine TestFactory getestet, die gerade Zahlen produziert und testet </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testDynamicTestFromIntStream_Limit </name>
                    <desc> Grenze, bis wohin iteriert werden soll </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> methodTypes.ParameterizingTest.testWithValueSource </path>
            <desc> Dieser Test testet, ob Zahlen in einem Intervall liegen (+ Bias). (Jupiter-Testfall) </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testWithValueSource_Bias </name>
                    <desc> Bias </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> methodTypes.RepeatingTest.testRepeating </path>
            <desc> Dieser Test wird f&#252;nf mal wiederholt (Jupiter-Testfall) </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testRepeating_MaxRepetition </name>
                    <desc> Wiederholungsnummer, bei der der Test erfolgreich ist </desc>
                </parameter>
            </parameters>
        </testcase>
        <testcase>
            <path> methodTypes.TemplateTest.testTemplate </path>
            <desc> Dieser Test das Alter mal zwei. (Jupiter-Testfall) </desc>
            <testtype> 5 </testtype>
            <parameters>
                <parameter>
                    <name> testTemplate_ListShouldContain </name>
                    <desc> Wahrheitswert, welcher angibt, ob die Liste das vorgegebene Element beinhaltet </desc>
                </parameter>
            </parameters>
        </testcase>       
    </testcases>
</root>